<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN"
"http://www.w3.org/TR/html4/loose.dtd">
<html>
<head>
<title>Einfacher Zugriff auf Lieblingsordner -- von Savage</title>
<meta http-equiv="content-type" content="text/html; charset=UTF-8">
<meta http-equiv="X-UA-Compatible" content="IE=edge">
<link href="../css/default.css" rel="stylesheet" type="text/css">
</head>
<body>

<h1>Einfacher Zugriff auf Lieblingsordner -- von Savage</h1>

<p> Wenn die mittlere Maustaste gedrückt wird, während bestimmte Fenstertypen aktiv sind, dann zeigt dieses Script ein Menü mit den Lieblingsordnern an. Nachdem ein Ordner ausgewählt wurde, wechselt das Script innerhalb des aktiven Fensters sofort auf diesen Ordner. Die folgenden Fenstertypen werden unterstützt: 1) Standard-Dialogfenster zum Öffnen oder Speichern von Dateien; 2) Explorer-Fenster; 3) Konsolenfenster (Eingabeaufforderung). Das Menü kann optional auch für nicht unterstützte Fenstertypen angezeigt werden, in diesem Fall wird der ausgewählte Ordner in einem neuen Explorer-Fenster geöffnet.
</p>
<p><a href="FavoriteFolders.ahk">Dieses Script herunterladen</a>  |  <a href="index.htm">Andere Beispiel-Scripts</a>  |  <a href="../AutoHotkey.htm">Home</a></p>

<pre class="NoIndent"><em>; Hinweis: Wenn "Ansicht &gt; Symbolleisten &gt; Adressleiste" im Fenster-Explorer deaktiviert ist,
; dann wird das Menü nicht angezeigt, wenn der unten ausgewählte Hotkey
; ein Tilde-Zeichen hat.  Wenn ein Tilde-Zeichen vorhanden ist, dann wird das Menü angezeigt,
; aber der Ordner bleibt wird in einem neuen Explorer-Fenster geöffnet, anstatt
; das aktive Fenster auf diesen Ordner zu wechseln.</em>

<em>; KONFIGURATION: HOTKEY AUSWÄHLEN
; Wenn die aktuelle Maus mehr als 3 Tasten hat, dann kann
; XButton1 (die 4.) oder XButton2 (die 5.) anstelle von MButton ausprobiert werden.
; Modifizierte Maustasten (wie ^MButton) oder
; ein Tastatur-Hotkey können auch verwendet werden.  Im Falle von MButton sollte das Tilde-Zeichen (~) als Präfix
; verwendet werden, damit die normale Funktionalität von MButton nicht verloren geht,
; sobald andere Fenstertypen wie ein Browser angeklickt werden.  Das Vorhandensein
; eines Tilde-Zeichens hindert das Script daran, das Menü für
; nicht unterstützte Fenstertypen anzuzeigen.  Das heißt, wenn kein Tilde-Zeichen vorhanden ist,
; zeigt der Hotkey das Menü immer an; und nach dem Auswählen
; eines Lieblingsordners, während ein nicht unterstützter Fenstertyp aktiv ist,
; wird ein neues Explorer-Fenster geöffnet, um den Inhalt des Ordners
; anzuzeigen.</em>
f_Hotkey = ~MButton

<em>; KONFIGURATION: LIEBLINGSORDNER AUSWÄHLEN
; Aktualisiert den unteren Sonderkommentarbereich, um die Lieblingsordner
; auszuwählen.  Specify the name of the menu item first, followed by a
; semicolon, followed by the name of the actual path of the favorite.
; Use a blank line to create a separator line.</em>

<em>/*
ITEMS IN FAVORITES MENU &lt;-- Do not change this string.
Desktop      <em>; %A_Desktop%</em>
Favorites    <em>; %A_Desktop%\..\Favorites</em>
My Documents <em>; %A_MyDocuments%</em>

Program Files; %A_ProgramFiles%
*/</em>


<em>; END OF CONFIGURATION SECTION
; Do not make changes below this point unless you want to change
; the basic functionality of the script.</em>

#SingleInstance  <em>; Needed since the hotkey is dynamically created.</em>

Hotkey, %f_Hotkey%, f_DisplayMenu
StringLeft, f_HotkeyFirstChar, f_Hotkey, 1
if f_HotkeyFirstChar = ~  <em>; Show menu only for certain window types.</em>
    f_AlwaysShowMenu = n
else
    f_AlwaysShowMenu = y

<em>; Used to reliably determine whether script is compiled:</em>
SplitPath, A_ScriptName,,, f_FileExt
if f_FileExt = Exe  <em>; Read the menu items from an external file.</em>
    f_FavoritesFile = %A_ScriptDir%\Favorites.ini
else  <em>; Read the menu items directly from this script file.</em>
    f_FavoritesFile = %A_ScriptFullPath%

<em>;----Read the configuration file.</em>
f_AtStartingPos = n
f_MenuItemCount = 0
Loop, Read, %f_FavoritesFile%
{
    if f_FileExt &lt;&gt; Exe
    {
        <em>; Since the menu items are being read directly from this</em>
        <em>; script, skip over all lines until the starting line is</em>
        <em>; arrived at.</em>
        if f_AtStartingPos = n
        {
            IfInString, A_LoopReadLine, ITEMS IN FAVORITES MENU
                f_AtStartingPos = y
            continue  <em>; Start a new loop iteration.</em>
        }
        <em>; Otherwise, the closing comment symbol marks the end of the list.</em>
        if A_LoopReadLine = */
            break  <em>; terminate the loop</em>
    }
    <em>; Menu separator lines must also be counted to be compatible</em>
    <em>; with A_ThisMenuItemPos:</em>
    f_MenuItemCount++
    if A_LoopReadLine =  <em>; Blank indicates a separator line.</em>
        Menu, Favorites, Add
    else
    {
        StringSplit, f_line, A_LoopReadLine, `;
        f_line1 = %f_line1%  <em>; Trim leading and trailing spaces.</em>
        f_line2 = %f_line2%  <em>; Trim leading and trailing spaces.</em>
        <em>; Resolve any references to variables within either field, and</em>
        <em>; create a new array element containing the path of this favorite:</em>
        Transform, f_path%f_MenuItemCount%, deref, %f_line2%
        Transform, f_line1, deref, %f_line1%
        Menu, Favorites, Add, %f_line1%, f_OpenFavorite
    }
}
return  <em>;----End of auto-execute section.</em>


<em>;----Open the selected favorite</em>
f_OpenFavorite:
<em>; Fetch the array element that corresponds to the selected menu item:</em>
StringTrimLeft, f_path, f_path%A_ThisMenuItemPos%, 0
if f_path =
    return
if f_class = #32770    <em>; It's a dialog.</em>
{
    if f_Edit1Pos &lt;&gt;   <em>; And it has an Edit1 control.</em>
    {
        <em>; Activate the window so that if the user is middle-clicking</em>
        <em>; outside the dialog, subsequent clicks will also work:</em>
        WinActivate ahk_id %f_window_id%
        <em>; Retrieve any filename that might already be in the field so</em>
        <em>; that it can be restored after the switch to the new folder:</em>
        ControlGetText, f_text, Edit1, ahk_id %f_window_id%
        ControlSetText, Edit1, %f_path%, ahk_id %f_window_id%
        ControlSend, Edit1, {Enter}, ahk_id %f_window_id%
        Sleep, 100  <em>; It needs extra time on some dialogs or in some cases.</em>
        ControlSetText, Edit1, %f_text%, ahk_id %f_window_id%
        return
    }
    <em>; else fall through to the bottom of the subroutine to take standard action.</em>
}
else if f_class in ExploreWClass,CabinetWClass  <em>; In Explorer, switch folders.</em>
{
    if f_Edit1Pos &lt;&gt;   <em>; And it has an Edit1 control.</em>
    {
        ControlSetText, Edit1, %f_path%, ahk_id %f_window_id%
        <em>; Tekl reported the following: "If I want to change to Folder L:\folder</em>
        <em>; then the addressbar shows http://www.L:\folder.com. To solve this,</em>
        <em>; I added a {right} before {Enter}":</em>
        ControlSend, Edit1, {Right}{Enter}, ahk_id %f_window_id%
        return
    }
    <em>; else fall through to the bottom of the subroutine to take standard action.</em>
}
else if f_class = ConsoleWindowClass <em>; In a console window, CD to that directory</em>
{
    WinActivate, ahk_id %f_window_id% <em>; Because sometimes the mclick deactivates it.</em>
    SetKeyDelay, 0  <em>; This will be in effect only for the duration of this thread.</em>
    IfInString, f_path, :  <em>; It contains a drive letter</em>
    {
        StringLeft, f_path_drive, f_path, 1
        Send %f_path_drive%:{enter}
    }
    Send, cd %f_path%{Enter}
    return
}
<em>; Since the above didn't return, one of the following is true:
; 1) It's an unsupported window type but f_AlwaysShowMenu is y (yes).
; 2) It's a supported type but it lacks an Edit1 control to facilitate the custom
;    action, so instead do the default action below.</em>
Run, Explorer %f_path%  <em>; Might work on more systems without double quotes.</em>
return


<em>;----Display the menu</em>
f_DisplayMenu:
<em>; These first few variables are set here and used by f_OpenFavorite:</em>
WinGet, f_window_id, ID, A
WinGetClass, f_class, ahk_id %f_window_id%
if f_class in #32770,ExploreWClass,CabinetWClass  <em>; Dialog or Explorer.</em>
    ControlGetPos, f_Edit1Pos,,,, Edit1, ahk_id %f_window_id%
if f_AlwaysShowMenu = n  <em>; The menu should be shown only selectively.</em>
{
    if f_class in #32770,ExploreWClass,CabinetWClass  <em>; Dialog or Explorer.</em>
    {
        if f_Edit1Pos =  <em>; The control doesn't exist, so don't display the menu</em>
            return
    }
    else if f_class &lt;&gt; ConsoleWindowClass
        return <em>; Since it's some other window type, don't display menu.</em>
}
<em>; Otherwise, the menu should be presented for this type of window:</em>
Menu, Favorites, show
return
</pre>
</body>
</html>
