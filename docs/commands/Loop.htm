<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN"
"http://www.w3.org/TR/html4/loose.dtd">
<html>
<head>
<title>Loop</title>
<meta http-equiv="content-type" content="text/html; charset=UTF-8">
<meta http-equiv="X-UA-Compatible" content="IE=edge">
<link href="../css/default.css" rel="stylesheet" type="text/css">
</head>
<body>

<h1>Loop</h1>

<p>Kontinuierliche Wiederholung von mehreren Befehlen: entweder mittels einer definierten Anzahl an Durchläufen oder bis ein <a href="Break.htm">Break</a>-Befehl zum Abbruch auffordert.</p>

<pre class="Syntax">Loop [, Anzahl]</pre>
<h3>Parameter</h3>
<dl>

  <dt>Anzahl</dt>
  <dd><p>How many times (iterations) to perform the loop, which can be an <a href="../Variables.htm#Expressions">expression</a>. If omitted, the Loop continues indefinitely until a <a href="Break.htm">break</a> or <a href="Return.htm">return</a> is encountered. However, an explicit blank value or number less than 1 causes the loop to be skipped entirely.</p>
      <p>If <em>Count</em> is an expression, it is evaluated only once, right before the loop begins.</p></dd>

</dl>

<h3>Bemerkungen</h3>
<p>Nach einer Schleife erfolgt für gewöhnlich ein <a href="Block.htm">Block</a> - bestehend aus mehreren Anweisungen, die den <em>Schleifenkörper</em> bilden. Hat die Schleife nur eine Anweisung, ist ein Block nicht notwendig (in diesem Fall zählt ein "If" und das dazugehörige "Else" als eine Anweisung).</p>
<p>Häufig wird dieser Befehl als Endlosschleife verwendet, die einen <a href="Break.htm">Break</a>-Befehl irgendwo im <em>Schleifenkörper</em> enthält, um die Schleife zu stoppen.</p>
<p>Es wird empfohlen, anstelle von <a href="Goto.htm">Goto</a> eine Schleife in Verbindung mit <a href="Break.htm">Break</a> und <a href="Continue.htm">Continue</a> zu verwenden, weil das Script dadurch verständlicher und besser verwaltbar ist. Um eine "Do...While"-Schleife zu simulieren, sollte die letzte Anweisung des <em>Schleifenkörpers</em> eine IF-Anweisung sein, die den <a href="Break.htm">Break</a>-Befehl ausführt, sobald die Bedingung erfüllt wird. Mit der gleichen Technik kann eine "While"-Schleife erstellt werden - dafür ist aber der <a href="While.htm">While</a>-Befehl besser geeignet.</p>
<p>Die interne Variable <strong>A_Index</strong> enthält die Nummer des aktuellen Schleifendurchlaufs. It contains 1 the first time the loop's <em>body </em>is executed. beim zweiten Mal eine 2 und so weiter. Wenn eine innere Schleife von eine äußere Schleife umschlossen ist, hat die innere Schleife Vorrang. A_Index funktioniert in jeder Schleifenvariante, auch in <a href="LoopFile.htm">Loops (Dateien &amp; Ordner)</a> und <a href="LoopReg.htm">Registrierung-Schleifen</a>. Außerhalb einer Schleife enthält A_Index eine 0.</p>
<p>A_Index can be assigned any integer value by the script. If <em>Count</em> is specified, changing A_Index affects the number of iterations that will be performed. For example, <code>A_Index := 3</code> would make the loop command act as though it is on the third iteration (A_Index will be 4 on the next iteration), while <code>A_Index--</code> would prevent the current iteration from being counted toward the total.</p>
<p>Der "<a href="Block.htm#otb">One True Brace Style</a>" kann gegebenenfalls mit einer normalen Schleife verwendet werden (aber nicht mit speziellen Schleifen wie <a href="LoopFile.htm">Loop (Dateien &amp; Ordner)</a> und <a href="LoopParse.htm">Parsing-Schleife</a>). Zum Beispiel:</p>
<pre>Loop <strong>{</strong>
    ...
<strong>}</strong>
Loop RepeatCount <strong>{</strong>
    ...
<strong>}</strong></pre>
<p>Spezialisierte Schleifen: Schleifen können verwendet werden, um Dateien, Ordner oder Registrierungseinträge automatisch zu ermitteln (nacheinander). Siehe <a href="LoopFile.htm">Loop (Dateien &amp; Ordner)</a> und <a href="LoopReg.htm">Registrierung-Schleife</a> für Details. Darüber hinaus können <a href="LoopReadFile.htm">dateilesende Schleifen</a> den kompletten Inhalt einer Datei Zeile für Zeile durchgehen. <a href="LoopParse.htm">Parsing-Schleifen</a> hingegen können bestimmte Felder abrufen, die sich innerhalb eines Strings befinden und durch Trennzeichen getrennt sind.</p>
<h3>Siehe auch</h3>
<p><a href="Until.htm">Until</a>, <a href="While.htm">While-Loop</a>, <a href="For.htm">For-Loop</a>, <a href="LoopFile.htm">Loop (Dateien &amp; Ordner)</a>, <a href="LoopReg.htm">Registrierung-Loop</a>, <a href="LoopReadFile.htm">dateilesende Schleife</a>, <a href="LoopParse.htm">Parsing-Loop</a>, <a href="Break.htm">Break</a>, <a href="Continue.htm">Continue</a>, <a href="Block.htm">Blöcke</a></p>
<h3>Beispiele</h3>
<pre class="NoIndent">Loop, 3
{
    MsgBox, Iterationsnummer ist %A_Index%.  <em>; A_Index wird 1, 2 und 3 sein.</em>
    Sleep, 100
}

Loop
{
    If a_index &gt; 25
        break  <em>; Schleife unterbrechen.</em>
    If a_index &lt; 20
        continue <em>; Folgendes überspringen und neue Iteration starten.</em>
    MsgBox, a_index = %a_index% <em>; Hier werden nur die Nummern von 20 bis 25 angezeigt.</em>
}</pre>

</body>
</html>
