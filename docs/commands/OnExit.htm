<!DOCTYPE HTML>
<html>
<head>
<title>OnExit</title>
<meta http-equiv="content-type" content="text/html; charset=UTF-8">
<meta http-equiv="X-UA-Compatible" content="IE=edge">
<meta name="robots" content="noindex, nofollow">
<link href="../static/theme.css" rel="stylesheet" type="text/css" />
<script src="../static/jquery.js" type="text/javascript"></script>
<script src="../static/tree.jquery.js" type="text/javascript"></script>
<script src="../static/ga.js" type="text/javascript"></script>
<script src="../static/content.js" type="text/javascript"></script>
</head>
<body>

<h1>OnExit</h1>

<p>Bestimmt eine <a href="../Functions.htm">Funktion</a>, die automatisch aufgerufen werden soll, wenn das Script beendet wird.</p>

<pre class="Syntax">OnExit([CallbackFunk])</pre>
<h3>Parameter</h3>
<dl>

  <dt>CallbackFunk</dt>
  <dd><p>Die <a href="../Functions.htm">Funktion</a>, die aufgerufen werden soll, wenn das Script beendet wird - entweder als Name oder <a href="../objects/Func.htm">Verweis</a>.</p>
  <p>Gebe einen leeren String an, um die aktuelle Funktion zu entfernen. Fehlt dieser Parameter komplett, wird sich nichts ändern.</p></dd>

</dl>

<h3>Rückgabewert</h3>
<p>Gibt einen Verweis auf eine Funktion zurück, wenn eine Funktion zuvor gesetzt wurde, ansonsten ein leerer String.</p>

<h3>CallbackFunk(ExitReason)</h3>
<p>Das Script wird beendet, nachdem die Callback-Funktion aufgerufen wurde, sofern die Funktion ungleich <a href="../Variables.htm#Boolean">True</a> zurückgibt. Das Aufrufen von <a href="ExitApp.htm">ExitApp</a> innerhalb der Funktion wird das Script sofort beenden, ohne dass die Callback-Funktion nochmals aufgerufen wird.</p>
<p>Die Callback-Funktion akzeptiert optional einen einzelnen Parameter. Wenn der <a href="Exit.htm">Exit</a>- oder <a href="ExitApp.htm">ExitApp</a>-Befehl verwendet wurde, enthält dieser Parameter den Exitcode. Ansonsten enthält er einen der folgenden Strings, auf welche Weise das Script beendet wird:</p>
<table class="info">
  <tr>
    <td>Logoff</td>
    <td><a name="logoff"></a>Der Benutzer meldet sich ab.</td>
  </tr>
  <tr>
    <td>Shutdown</td>
    <td>Das System wird heruntergefahren oder neu gestartet (z. B. mit dem <a href="Shutdown.htm">Shutdown</a>-Befehl).</td>
  </tr>
  <tr>
    <td>Close</td>
    <td>Das Script hat eine WM_CLOSE- oder WM_QUIT-Nachricht empfangen, hatte einen kritischen Fehler, oder wurde auf andere Weise geschlossen. Obwohl alle von denen ungewöhnlich sind, könnte <a href="WinClose.htm">WinClose</a> die Ursache für WM_CLOSE sein, falls dieser Befehl auf das Hauptfenster des Scripts angewendet wird. Um das zu verhindern, sollte das Hauptfenster mit <code>Send, !{F4}</code> geschlossen werden.</td>
  </tr>
  <tr>
    <td>Error</td>
    <td>Es ist ein Laufzeitfehler in einem Script entstanden, das nicht <a href="../Scripts.htm#persistent">persistent</a> ist. Ein Laufzeitfehler tritt zum Beispiel auf, wenn <a href="Run.htm">Run/RunWait</a> nicht in der Lage ist, das angegebene Programm oder Dokument zu öffnen.</td>
  </tr>
  <tr>
    <td>Menu</td>
    <td>Der Benutzer hat Exit im Hauptfenster-Menü oder voreingestellten Tray-Menü ausgewählt.</td>
  </tr>
  <tr>
    <td>Reload</td>
    <td>Das Script wird über den <a href="Reload.htm">Reload</a>-Befehl oder -Menüpunkt neu geladen.</td>
  </tr>
  <tr>
    <td>Single</td>
    <td>Aufgrund von <a href="_SingleInstance.htm">#SingleInstance</a> wird das Script mit einer neuen Instanz von sich selbst ersetzt.</td>
  </tr>
</table>

<h3>Bemerkungen</h3>
<p>Die Callback-Funktion wird aufgerufen, sobald das Script in irgendeiner Form beendet wird (es sei denn, das Script wird mit einer gewaltsamen Methode beendet, wie z. B. "Task beenden"). Diese Subroutine wird auch aufgerufen, sobald die Befehle <a href="_SingleInstance.htm">#SingleInstance</a> und <a href="Reload.htm">Reload</a> eine vorherige Instanz auffordern, sich zu beenden.</p>
<p>Mit <code><a href="OnMessage.htm#shutdown">OnMessage(0x11, "WM_QUERYENDSESSION")</a></code> kann das Herunterfahren oder Abmelden des Betriebssystems erkannt und optional abgebrochen werden.</p>
<p>Der OnExit-<a href="../misc/Threads.htm">Thread</a> ignoriert <a href="_MaxThreads.htm">#MaxThreads</a> (er wird immer gestartet, wenn nötig). Darüber hinaus kann dieser bei der Ausführung nicht von einem anderen <a href="../misc/Threads.htm">Thread</a> unterbrochen werden, einschließlich <a href="../Hotkeys.htm">Hotkeys</a>, <a href="Menu.htm">benutzerdefinierte Menüpunkte</a> und <a href="SetTimer.htm">zeitgesteuerte Subroutinen</a>. Allerdings wird der Thread unterbrochen (und das Script beendet), wenn der Benutzer den Menüpunkt Exit im Tray-Menü oder Hauptmenü auswählt, oder das Script aufgrund von <a href="Reload.htm">Reload</a> oder <a href="_SingleInstance.htm">#SingleInstance</a> beendet wird. Deshalb sollte die Callback-Funktion schnell zum Ende kommen, solange dem Benutzer nicht bewusst ist, was er tut.</p>
<p>Wenn der OnExit-<a href="../misc/Threads.htm">Thread</a> auf einen Fehler wie z. B. Laufzeitfehler stößt, wird das Script beendet. Dadurch wird verhindert, dass das Script aufgrund einer fehlerhaften Callback-Funktion nicht mehr beendet werden kann.</p>
<p>Sobald die Callback-Funktion von einem Exitversuch aufgerufen wird, beginnt sie mit den Standardwerten in Einstellungen wie <a href="SendMode.htm">SendMode</a>. Diese Standardwerte können im <a href="../Scripts.htm#auto">automatischen Ausführungsbereich</a> geändert werden.</p>

<h3>Siehe auch</h3>
<p><a href="OnMessage.htm">OnMessage()</a>, <a href="RegisterCallback.htm">RegisterCallback()</a>, <a href="../misc/Clipboard.htm#OnClipboardChange">OnClipboardChange</a>, <a href="ExitApp.htm">ExitApp</a>, <a href="Shutdown.htm">Shutdown</a>, <a href="_Persistent.htm">#Persistent</a>, <a href="../misc/Threads.htm">Threads</a>, <a href="Gosub.htm">Gosub</a>, <a href="Return.htm">Return</a>, <a href="Menu.htm">Menu</a></p>

<h3>Beispiel</h3>
<pre class="NoIndent">#Persistent  <em>; Zum Zwecke der Demonstration wird das Script aufrecht erhalten, wenn der Benutzer "Nein" auswählt.</em>
OnExit("ExitFunk")
return

ExitFunk(ExitReason)
{
    if ExitReason != "Logoff" and ExitReason != "Shutdown"
    {
        MsgBox, 4, , Möchten Sie das Script wirklich beenden?
        if A_MsgBoxResult = "No"
            return true  <em>; Verhindert, dass das Script beendet werden kann.</em>
    }
    <em>; Keinen Rückgabewert: das Script wird automatisch beendet.</em>
}
</pre>

</body>
</html>
