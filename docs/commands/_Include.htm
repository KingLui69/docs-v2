<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN"
"http://www.w3.org/TR/html4/loose.dtd">
<html>
<head>
<title>#Include</title>
<meta http-equiv="content-type" content="text/html; charset=UTF-8">
<meta http-equiv="X-UA-Compatible" content="IE=edge">
<link href="../css/default.css" rel="stylesheet" type="text/css">
</head>
<body>

<h1>#Include / #IncludeAgain</h1>

<p>Veranlasst das Script sich so zu verhalten, als würde sich der Inhalt der angegebenen Datei direkt an dieser Position befinden.</p>

<pre class="Syntax">#Include DateiOderVerzName
#Include &lt;LibName&gt;
#IncludeAgain DateiOderVerzName </pre>
<h3>Parameter</h3>
<dl>

  <dt>DateiOderVerzName</dt>
  <dd><p>Der Pfad einer Datei oder eines Verzeichnisses, wie unten beschrieben. This <strong>must not</strong> contain double quotes, wildcards, or variable references except <a href="../Variables.htm#ScriptDir">%A_ScriptDir%</a>, <a href="../Variables.htm#AppData">%A_AppData%</a>, <a href="../Variables.htm#AppDataCommon">%A_AppDataCommon%</a> and <a href="../Variables.htm#LineFile">%A_LineFile%</a>. <a href="_EscapeChar.htm">Escapesequenzen</a> außer Semikolon (<strong>`;</strong>) dürfen weder verwendet werden, noch sind sie notwendig, weil solche Zeichen (z. B. Prozentzeichen) literal behandelt werden.</p>
    <p><strong>File:</strong> The name of the file to be included, which is assumed to be in the same directory as the current file if an absolute path is not specified. Hinweis: <a href="SetWorkingDir.htm">SetWorkingDir</a> has no effect on #Include because #Include is processed before the script begins executing.</p>
      <p><strong>Directory:</strong> Specify a directory instead of a file to change the working directory used by all subsequent occurrences of #Include and <a href="FileInstall.htm">FileInstall</a> in the current file. Hinweis: Diese Änderung hat keinen Einfluss auf das anfänglich gesetzte Arbeitsverzeichnis des Scripts (<a href="../Variables.htm#WorkingDir">A_WorkingDir</a>). Um das zu ändern, verwende <a href="SetWorkingDir.htm">SetWorkingDir</a> im obersten Bereich des Scripts</p></dd>

  <dt>LibName</dt>
  <dd><p>A library file or function name. For example, <code>#include &lt;lib&gt;</code> and <code>#include &lt;lib_func&gt;</code> would both include lib.ahk from one of the <a href="../Functions.htm#lib">function library folders</a>.</p></dd>

</dl>
<h3>Bemerkungen</h3>
<p>Ein Script verhält sich so, als würde sich der Inhalt der einzufügenden Datei exakt auf der Position von #Include befinden (als wäre der Inhalt der Datei kopiert und eingefügt wurden). Daraus folgt, dass zwei einzelne Scripts in der Regel nicht zu einem funktionierenden Script zusammengefügt werden können (um das zu erreichen, siehe <a href="http://www.autohotkey.com/forum/topic18545.html">www.autohotkey.com/forum/topic18545.html</a>).</p>
<p>#Include stellt sicher, dass <em>Dateiname</em> nur einmal eingefügt wird, selbst wenn mehrere Einfügungen für diese Datei vorkommen. #IncludeAgain erlaubt hingegen mehrere Einfügungen von der gleichen Datei. In jeder anderen Hinsicht ist #IncludeAgain das gleiche wie #Include.</p>
<p>Bei Bedarf kann vor dem <em>Dateiname</em>-Parameter ein *i angefügt werden, das das Programm dazu veranlassen würde, die einzufügende Datei zu ignorieren, wenn sie nicht gelesen werden konnte. Zum Beispiel: <code>#Include *i Spezialoptionen.ahk</code>. Diese Option sollte man nur verwenden, wenn der Inhalt der einzufügenden Datei nicht zum Ausführen des Hauptscripts benötigt wird.</p>
<p>Die Nummerierung der Zeilen, die im Hauptfenster per <a href="ListLines.htm">ListLines</a> oder Menü "View-Lines" angezeigt werden, richtet sich nach ihrer physikalischen Reihenfolge innerhalb der einzufügenden Dateien. Das heißt, dass das Einfügen einer neuen Datei die Zeilennummerierung des Hauptscripts um 1 erhöht, nämlich von der #Include-Zeile selbst (außer bei <a href="../Scripts.htm#ahk2exe">kompilierten Scripts</a>, die ihre einzufügenden Dateien zu einem großen Script zusammenfügen, während sie kompiliert werden).</p>
<p>#Include wird oft verwendet, um <a href="../Functions.htm">Funktionen</a> aus einer externen Datei zu laden. Im Gegensatz zu Subroutinen können <a href="../Functions.htm">Funktionen</a> ganz am Anfang des Scripts eingefügt werden, ohne dabei den <a href="../Scripts.htm#auto">automatischen Ausführungsbereich</a> zu beeinflussen.</p>
<p>#Include kann, wie bei anderen Direktiven auch, nicht bedingt ausgeführt werden. Das heißt, dass das folgende Beispiel nicht funktionieren würde:</p>
<pre>If x = 1
    #Include BeliebigeDatei.ahk  <em>; Diese Zeile wird ohne Beachtung des X-Wertes ausgeführt.</em>
    y = 2  <em>; Und diese Zeile würde sich auf das obere IF beziehen, weil sich Direktiven nicht auf IFs beziehen können.</em></pre>
<p>Dateien können automatisch eingefügt werden (ohne #Include verwenden zu müssen), wenn eine <a href="../Functions.htm#lib">Library-Funktion</a> per Name aufgerufen wird.</p>

<h3>Siehe auch</h3>
<p> <a href="../Functions.htm#lib">Libraries mit Funktionen</a>, <a href="../Functions.htm">Funktionen</a>, <a href="FileInstall.htm">FileInstall</a></p>
<h3>Beispiel</h3>
<pre class="NoIndent">#Include C:\Meine Dokumente\Scripts\Hilfsprogramm-Subroutinen.ahk
#Include %A_ScriptDir%  <em>; Ändert das Arbeitsverzeichnis für jedes nachfolgende #Include und FileInstall.</em>
#Include C:\Meine Scripts  <em>; Wie oben, aber für ein direkt benanntes Verzeichnis.</em></pre>

</body>
</html>
