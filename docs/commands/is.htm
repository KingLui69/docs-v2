<!DOCTYPE HTML>
<html>
<head>
<title>Is</title>
<meta http-equiv="content-type" content="text/html; charset=UTF-8">
<meta http-equiv="X-UA-Compatible" content="IE=edge">
<meta name="robots" content="noindex, nofollow">
<link href="../static/theme.css" rel="stylesheet" type="text/css" />
<script src="../static/jquery.js" type="text/javascript"></script>
<script src="../static/tree.jquery.js" type="text/javascript"></script>
<script src="../static/ga.js" type="text/javascript"></script>
<script src="../static/content.js" type="text/javascript"></script>
</head>
<body>

<h1><em>Wert</em> is <em>Typ</em></h1>

<p>Überprüft innerhalb eines Ausdrucks, ob ein Wert ein bestimmter Typ ist, oder numerisch, großgeschrieben und so weiter ist. </p>

<pre class="Syntax">if <i>Wert</i> is <i>Typ</i>
if !(<i>Wert</i> is <i>Typ</i>) </pre>
<h3>Parameter</h3>
<dl>

  <dt>Wert</dt>
  <dd><p>Ein <a href="../Variables.htm#Expressions">Ausdruck</a>, der den zu überprüfenden Wert erzeugt.</p></dd>

  <dt>Typ</dt>
  <dd><p>Ein <a href="../Variables.htm#Expressions">Ausdruck</a>, der ein Typ-String oder Objekt erzeugt, wie unten beschrieben.</p></dd>

</dl>

<h3 id="Types">Typ-Strings</h3>
<p>Typ-Strings unterscheiden nicht zwischen Groß- und Kleinschreibung.</p>
<table class="info">
  <tr>
    <th>&nbsp;</th><th></th>
  </tr>
  <tr>
    <td width="15%">integer</td>
    <td width="85%">Wahr, wenn <em>Wert</em> ein Integer oder ein rein numerischer String (dezimal oder hexadezimal) ohne Dezimalpunkt ist. Führende oder nachfolgende Leer- und Tabulatorzeichen sind erlaubt. Der String kann mit einem Plus- oder Minuszeichen beginnen, und darf nicht leer sein.</td>
  </tr>
  <tr>
    <td>float</td>
    <td>Wahr, wenn <em>Wert</em> eine Fließkommazahl oder ein rein numerischer String mit Dezimalpunkt ist. Führende oder nachfolgende Leer- und Tabulatorzeichen sind erlaubt. Der String kann mit einem Pluszeichen, Minuszeichen oder Dezimalpunkt beginnen, und darf nicht leer sein.</td>
  </tr>
  <tr>
    <td>number</td>
    <td>Wahr, wenn <code><i>Wert</i> is "integer" or <i>Wert</i> is "float"</code> zutrifft.</td>
  </tr>
  <tr>
    <td>object</td>
    <td>Wahr, wenn <em>Wert</em> ein <a href="../Objects.htm">Objekt</a> ist.</td>
  </tr>
  <tr>
    <td>byref</td>
    <td>Wahr, wenn <em>Wert</em> auf einen <a href="../Functions.htm#ByRef">ByRef-Parameter</a> verweist und der Funktionsaufrufer einen Variablenverweis übergab.</td>
  </tr>
  <tr>
    <th>Strings</th><th></th>
  </tr>
  <tr>
    <td>digit</td>
    <td>Wahr, wenn <em>Wert</em> ein Integer, ein leerer String oder ein String nur mit den Zeichen 0 bis 9 ist. Folgende Zeichen sind nicht erlaubt: Leerzeichen, Tabulatorzeichen, Plus- und Minuszeichen, Dezimalpunkte, Hexadezimalzahlen und 0x-Präfix.</td>
  </tr>
  <tr>
    <td>xdigit</td>
    <td>Hexadezimale Zahlen: Das gleiche wie <em>digit</em>, aber mit dem Unterschied, dass auch die Zeichen A bis F (groß- oder kleingeschrieben) erlaubt sind. 0x als Präfix wird toleriert, sofern vorhanden.</td>
  </tr>
  <tr>
    <td>alpha</td>
    <td>Wahr, wenn <em>Wert</em> ein String und leer ist, oder nur aus alphabetischen Zeichen besteht. Falsch, wenn Zahlen, Leerzeichen, Tabulatorzeichen, Punkte oder andere nicht-alphabetische Zeichen im String sind. Wenn <em>Wert</em> zum Beispiel ein Leerzeichen mit einem Buchstaben danach enthält, wird der Wert <em>nicht</em> als <em>alpha</em> betrachtet. </td>
  </tr>
  <tr>
    <td>upper</td>
    <td>Wahr, wenn <em>Wert</em> ein String und leer ist, oder nur aus Großbuchstaben besteht. Falsch, wenn Zahlen, Leerzeichen, Tabulatorzeichen, Punkte oder andere nicht großgeschriebene Zeichen im String sind.</td>
  </tr>
  <tr>
    <td>lower</td>
    <td>Wahr, wenn <em>Wert</em> ein String und leer ist, oder nur aus Kleinbuchstaben besteht. Falsch, wenn Zahlen, Leerzeichen, Tabulatorzeichen, Punkte oder andere nicht kleingeschriebene Zeichen im String sind.</td>
  </tr>
  <tr>
    <td>alnum</td>
    <td>Das gleiche wie <em>alpha</em>, außer dass Integer und Zeichen von 0 bis 9 auch möglich sind.</td>
  </tr>
  <tr>
    <td>space</td>
    <td>Wahr, wenn <em>Wert</em> ein String und leer ist, oder nur die folgenden Leerraumzeichen enthält: Leerzeichen (<a href="../Variables.htm">%A_Space%</a>), Tabulatorzeichen (<a href="../Variables.htm">%A_Tab%</a> oder `t), LF-Zeichen (`n), CR-Zeichen (`r), vertikaler Tabulator (`v) und Seitenvorschub (`f).</td>
  </tr>
  <tr>
    <td>time</td>
    <td><p><a name="time"></a>Wahr, wenn <em>Wert</em> ein gültiger Zeitstempel im <a href="FileSetTime.htm#YYYYMMDD">YYYYMMDDHH24MISS</a>-Format ist. Zum Beispiel wird ein 4-stelliger String wie 2004 als gültig angesehen. Mit <a href="../Functions.htm#StrLen">StrLen</a> kann bestimmt werden, ob zusätzliche Zeitkomponenten vorhanden sind.</p>
      <p>Jahre unter 1601 sind ungültig, weil diese normalerweise vom Betriebssystem nicht unterstützt werden. Das höchste Jahr ist 9999. </p>
      <p>Ersatzweise kann das Wort DATE verwendet werden, das zum gleichen Ergebnis führt.</p>
    </td>
  </tr>
</table>

<h3 id="Objects">Objekte</h3>
<p>Wenn <em>Typ</em> ein <a href="../Objects.htm">Objekt</a> ist, gilt das Ergebnis als wahr, wenn <em>Wert</em> ein Objekt ist, das von <em>Typ</em> direkt oder indirekt abgeleitet wurde. Zum Beispiel:</p>
<pre>x := {}
y := new x  <em>; Das gleiche wie y := {base: x}</em>
z := new y
MsgBox(x is x)  <em>; False</em>
MsgBox(y is x)  <em>; True</em>
MsgBox(z is x)  <em>; True</em>
</pre>

<h3>Bemerkungen</h3>
<p><code>is</code> kann überall dort eingesetzt werden, wo ein Ausdruck erwartet wird. <a href="../Variables.htm#Operators">Vorrang-Regeln</a> gelten auch hier, so ist <code>x or y is z</code> das gleiche wie <code>x or (y is z)</code>.</p>
<p>Soll der Wert auf mehreren Typen überprüft werden, muss <code>is</code> mehrmals verwendet werden. Zum Beispiel <code>x is "integer" or x is "space"</code>.</p>
<p>Da literale Zahlen wie <code>128</code>, <code>0x7F</code> und <code>1.0</code> in reine Zahlen umgewandelt werden, bevor das Script startet, geht das Format der literalen Zahl verloren. Daher richten sich die Typenüberprüfungen nach der dezimalen Form der Zahl. Zum Beispiel ist <code>0x7F is "digit"</code> das gleiche wie <code>"128" is "digit"</code>.</p>
<p>Das Gebietsschema des Betriebssystems wird ignoriert, sofern <a href="StringCaseSense.htm">StringCaseSense Locale</a> nicht verwendet wurde.</p>

<h3>Siehe auch</h3>
<p><a href="../Variables.htm#YYYY">A_YYYY</a>, <a href="FileGetTime.htm">FileGetTime</a>, <a href="IfExpression.htm">if (Ausdruck)</a>, <a href="../Functions.htm#StrLen">StrLen</a>, <a href="../Functions.htm#InStr">InStr</a>, <a href="StrLower.htm">StrUpper</a>, <a href="DateAdd.htm">DateAdd</a></p>

<h3>Beispiel</h3>
<pre class="NoIndent">if var is "float"
    MsgBox, %var% ist eine Fließkommazahl.
else if var is 'integer'
    MsgBox, %var% ist eine Integerzahl.
if var is "time"
    MsgBox, %var% ist auch ein gültiger Zeitstempel.</pre>

</body>
</html>
