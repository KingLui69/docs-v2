<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN"
"http://www.w3.org/TR/html4/loose.dtd">
<html>
<head>
<title>PixelGetColor</title>
<meta http-equiv="content-type" content="text/html; charset=UTF-8">
<meta http-equiv="X-UA-Compatible" content="IE=edge">
<link href="../css/default.css" rel="stylesheet" type="text/css">
</head>
<body>

<h1>PixelGetColor</h1>

<p>Ermittelt die Farbe des Pixels bei den angegebenen Koordinaten.</p>

<pre class="Syntax">PixelGetColor, OutputVar, X, Y [, Alt|Slow] </pre>
<h3>Parameter</h3>
<dl>

  <dt>AusgabeVar</dt>
  <dd><p>The name of the variable in which to store the color ID in hexadecimal red-green-blue (RGB) format. Zum Beispiel ist die Farbe Lila als 0x800080 definiert, weil sie eine Blau- und Rot-Intensität von 80 und eine Grün-Intensität von 00 hat. </p></dd>

  <dt>X, Y</dt>
  <dd><p>The X and Y coordinates of the pixel. Die Koordinaten beziehen sich auf das aktive Fenster, es sei denn, <a href="CoordMode.htm">CoordMode</a> wurde dazu verwendet, dass zu ändern.</p></dd>

  <dt>Alt|Slow</dt>
  <dd><p>Dieser Parameter kann beliebig viele der folgenden Wörter enthalten. If more than one word is present, separate each from the next with a space (e.g. <code>Alt Slow</code>).</p>
      <p><strong>Alt</strong>: Uses an alternate method to retrieve the color, which should be used when the normal method produces invalid or inaccurate colors for a particular type of window. Diese Methode ist etwa 10% langsamer als die normale Methode.</p>
      <p><strong>Slow</strong>: Uses a more elaborate method to retrieve the color, which may work in certain full-screen applications when the other methods fail. Diese Methode ist etwa dreimal langsamer als die normale Methode. Hinweis: <em>Slow</em> takes precedence over <em>Alt</em>, so there is no need to specify <em>Alt</em> in this case.</p>
    </dd>

</dl>

<h3>ErrorLevel</h3>
<p>This command is able to throw an exception on failure. For more information, see <a href="Catch.htm#RuntimeErrors">Runtime Errors</a>.</p>
<p><a href="../misc/ErrorLevel.htm">ErrorLevel</a> wird bei Misserfolg auf 1 und bei Erfolg auf 0 gesetzt.</p>
<h3>Bemerkungen</h3>
<p>Der Pixel muss sichtbar sein; das heißt, dass es nicht möglich ist, die Pixelfarbe eines Fensters zu ermitteln, das sich hinter einem anderen Fenster befindet. Pixel, die sich unter dem Mauszeiger befinden, werden in der Regel erkannt. Die Ausnahme machen Mauszeiger bei Spielen, weil diese die Sicht auf darunterliegende Pixel behindern.</p>
<p>Mit "Window Spy" (im Tray-Icon-Menü verfügbar) oder dem Beispiel weiter unten können die aktuellen Farben auf dem Bildschirm ermittelt werden.</p>
<p>Bekannte Einschränkungen:</p>
<ul>
  <li>Ein Fenster, das <a href="WinSet.htm#trans">teilweise transparent</a> ist oder unsichtbare Farben enthält (<a href="WinSet.htm#TransColor">TransColor</a>), ermittelt typischerweise Farben vom Fenster, die sich dahinter befinden.</li>
  <li>PixelGetColor erzeugt ungenaue Ergebnisse bei bestimmten Anwendungen. Sollte das der Fall sein, kann das Wort <em>Alt</em> oder <em>Slow</em> im letzten Parameter ausprobiert werden.</li>
</ul>
<h3>Siehe auch</h3>
<p><a href="PixelSearch.htm">PixelSearch</a>, <a href="ImageSearch.htm">ImageSearch</a>, <a href="CoordMode.htm">CoordMode</a>, <a href="MouseGetPos.htm">MouseGetPos</a></p>
<h3>Beispiel</h3>
<pre class="NoIndent">^!z::  <em>; Hotkey STRG+ALT+Z.</em>
MouseGetPos, MausX, MausY
PixelGetColor, Farbe, %MausX%, %MausY%
MsgBox Auf der aktuellen Mausposition befindet sich die Farbe %Farbe%.
Return</pre>

</body>
</html>
